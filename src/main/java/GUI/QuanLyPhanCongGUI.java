/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.CourseInstructorBLL;
import DTO.CourseInstructorDTO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QuanLyPhanCongGUI extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyPhanCongGUI
     */
    CourseInstructorBLL s = new CourseInstructorBLL();
    DefaultTableModel model;
    public QuanLyPhanCongGUI() throws SQLException {
        initComponents();
        listCI();
        loadTenGiangVienCBB();
        loadTenKhoaHocCBB();
        cbbTenGiangVien.setSelectedIndex(-1);
        cbbTenKhoaHoc.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cbb_TimKiem = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        panelRadius1 = new Custom.PanelRadius();
        panelRadius3 = new Custom.PanelRadius();
        jLabel19 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbbTenGiangVien = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtMaGiangVien = new javax.swing.JTextField();
        txtMaKhoaHoc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbbTenKhoaHoc = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnThem = new Custom.ButtonRadius();
        btnSua = new Custom.ButtonRadius();
        btnXoa = new Custom.ButtonRadius();

        setBackground(new java.awt.Color(222, 229, 238));

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyTyped(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã giảng viên", "Tên giảng viên", "Mã khóa học", "Tên khóa học"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        cbb_TimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên giảng viên", "Tên khóa học", "Mã giảng viên", "Mã khóa học" }));

        jLabel5.setText("Lọc theo:");

        panelRadius1.setBackground(new java.awt.Color(255, 255, 255));
        panelRadius1.setRoundBottomLeft(30);
        panelRadius1.setRoundBottomRight(30);
        panelRadius1.setRoundTopLeft(30);
        panelRadius1.setRoundTopRight(30);

        panelRadius3.setBackground(new java.awt.Color(63, 86, 185));
        panelRadius3.setRoundTopLeft(30);
        panelRadius3.setRoundTopRight(30);

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Information");

        javax.swing.GroupLayout panelRadius3Layout = new javax.swing.GroupLayout(panelRadius3);
        panelRadius3.setLayout(panelRadius3Layout);
        panelRadius3Layout.setHorizontalGroup(
            panelRadius3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRadius3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        panelRadius3Layout.setVerticalGroup(
            panelRadius3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRadius3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        jLabel4.setText("Tên giảng viên");

        cbbTenGiangVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTenGiangVienActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã giảng viên");

        txtMaGiangVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaGiangVienActionPerformed(evt);
            }
        });

        jLabel3.setText("Mã khóa học");

        cbbTenKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTenKhoaHocActionPerformed(evt);
            }
        });

        jLabel6.setText("Tên khóa học");

        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.setColor(new java.awt.Color(102, 0, 255));
        btnThem.setColorClick(new java.awt.Color(51, 0, 153));
        btnThem.setColorOver(new java.awt.Color(102, 0, 204));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThem.setRoundBottomLeft(10);
        btnThem.setRoundBottomRight(10);
        btnThem.setRoundTopLeft(10);
        btnThem.setRoundTopRight(10);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.setColor(new java.awt.Color(102, 0, 255));
        btnSua.setColorClick(new java.awt.Color(51, 0, 153));
        btnSua.setColorOver(new java.awt.Color(102, 0, 204));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSua.setRoundBottomLeft(10);
        btnSua.setRoundBottomRight(10);
        btnSua.setRoundTopLeft(10);
        btnSua.setRoundTopRight(10);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.setColor(new java.awt.Color(102, 0, 255));
        btnXoa.setColorClick(new java.awt.Color(51, 0, 153));
        btnXoa.setColorOver(new java.awt.Color(102, 0, 204));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa.setRoundBottomLeft(10);
        btnXoa.setRoundBottomRight(10);
        btnXoa.setRoundTopLeft(10);
        btnXoa.setRoundTopRight(10);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRadius1Layout = new javax.swing.GroupLayout(panelRadius1);
        panelRadius1.setLayout(panelRadius1Layout);
        panelRadius1Layout.setHorizontalGroup(
            panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRadius3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelRadius1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRadius1Layout.createSequentialGroup()
                        .addGroup(panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbTenGiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaGiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(94, 94, 94)
                        .addGroup(panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbTenKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(txtMaKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelRadius1Layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        panelRadius1Layout.setVerticalGroup(
            panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRadius1Layout.createSequentialGroup()
                .addComponent(panelRadius3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbTenKhoaHoc)
                    .addComponent(cbbTenGiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaGiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(panelRadius1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(471, 471, 471))
                    .addComponent(panelRadius1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 966, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbb_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbb_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelRadius1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaGiangVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaGiangVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaGiangVienActionPerformed

    private void txtTimKiemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyTyped
        // TODO add your handling code here:
            String value = cbb_TimKiem.getSelectedItem().toString();
            switch(value){
                case "Mã giảng viên":
                    char c = evt.getKeyChar();
                    if(!Character.isDigit(c))
                        evt.consume();
                    break;
                case "Mã khóa học":
                    char d = evt.getKeyChar();
                    if(!Character.isDigit(d))
                        evt.consume();
                    break;
            }

    }//GEN-LAST:event_txtTimKiemKeyTyped

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtTimKiemKeyPressed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        try {
            // TODO add your handling code here:
            String value = cbb_TimKiem.getSelectedItem().toString();
            switch(value){
                case "Tên giảng viên":
                    if(txtTimKiem.getText().isEmpty())
                        listCI();
                    else
                        findNameInstructor(txtTimKiem.getText());
                    break;
                case "Mã giảng viên":
                    if(txtTimKiem.getText().isEmpty())
                        listCI();
                    else
                        findIdInstructor(txtTimKiem.getText());
                    break;
                case "Tên khóa học":
                    if(txtTimKiem.getText().isEmpty())
                        listCI();
                    else
                        findNameCourse(txtTimKiem.getText());
                    break;
                case "Mã khóa học":
                    if(txtTimKiem.getText().isEmpty())
                        listCI();
                    else
                        findIdCourse(txtTimKiem.getText());
                    
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyPhanCongGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        model = (DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        if(i>=0){
            sOld.setCourseID(Integer.parseInt(model.getValueAt(i, 1).toString()));
            sOld.setPersonID(Integer.parseInt(model.getValueAt(i, 3).toString()));
            txtMaGiangVien.setText(model.getValueAt(i, 3).toString());
            cbbTenGiangVien.setSelectedItem(model.getValueAt(i, 4).toString());
            cbbTenKhoaHoc.setSelectedItem(model.getValueAt(i, 2).toString());
            txtMaKhoaHoc.setText(model.getValueAt(i, 1).toString());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void cbbTenGiangVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTenGiangVienActionPerformed
        // TODO add your handling code here:
        if(cbbTenGiangVien.getSelectedIndex()==-1){
            
        }
        else
        {
            try {
                int result = s.getIdInstructorFromFullname(cbbTenGiangVien.getSelectedItem().toString());
                txtMaGiangVien.setText(Integer.toString(result));
            } catch (SQLException ex) {
                Logger.getLogger(QuanLyPhanCongGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cbbTenGiangVienActionPerformed

    private void cbbTenKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTenKhoaHocActionPerformed
        // TODO add your handling code here:
        if(cbbTenKhoaHoc.getSelectedIndex()==-1){
            
        }
        else
        {
            try {
                int result = s.getIdCourserFromTitle(cbbTenKhoaHoc.getSelectedItem().toString());
                txtMaKhoaHoc.setText(Integer.toString(result));
            } catch (SQLException ex) {
                Logger.getLogger(QuanLyPhanCongGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cbbTenKhoaHocActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTable1MouseEntered

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            CourseInstructorDTO ci = new CourseInstructorDTO(Integer.parseInt(txtMaKhoaHoc.getText()),Integer.parseInt(txtMaGiangVien.getText()), "", "");
            boolean isExist = s.isExistRecord(ci);
            if(isExist)
                JOptionPane.showMessageDialog(btnThem, "Giảng viên đã được phân công khóa này rồi, vui lòng chọn khóa khác");
            else{
                listCI();
                JOptionPane.showMessageDialog(btnThem, "Phân công thành công");
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyPhanCongGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int confirm =JOptionPane.showConfirmDialog(this,"Would you like to delete this course?","Confirm",JOptionPane.YES_NO_OPTION);
        if(confirm==JOptionPane.YES_OPTION){
          if(jTable1.getSelectionModel().isSelectionEmpty() == true)
            JOptionPane.showMessageDialog(btnThem, "Vui lòng chọn khóa học để xóa");
            else{
            try {
            // TODO add your handling code here:
                CourseInstructorDTO ci = new CourseInstructorDTO();
                ci.setCourseID(Integer.parseInt(txtMaKhoaHoc.getText()));
                ci.setPersonID(Integer.parseInt(txtMaGiangVien.getText()));
                if(s.deleteCourseInstructor(ci)==0){
                    JOptionPane.showMessageDialog(this, "Delete failed");
                }
                else{
                    JOptionPane.showMessageDialog(this, "Delete success");
                    listCI();
                }
            } catch (SQLException ex) {
                Logger.getLogger(QuanLyPhanCongGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }  
        }
        
    }//GEN-LAST:event_btnXoaActionPerformed

    CourseInstructorDTO sOld = new CourseInstructorDTO();
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        CourseInstructorDTO sNew = new CourseInstructorDTO();
        sNew.setCourseID(Integer.parseInt(txtMaKhoaHoc.getText()));
        sNew.setPersonID(Integer.parseInt(txtMaGiangVien.getText()));
        try {
            if(s.updateCourseInstructor(sOld, sNew)==0){
                JOptionPane.showMessageDialog(this, "Update failed");
            }
            else{
                JOptionPane.showMessageDialog(this, "Update success");
                 listCI();
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyPhanCongGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void loadTenGiangVienCBB() throws SQLException{
        cbbTenGiangVien.setModel(new DefaultComboBoxModel<String>((String[]) s.readNameCourseInstructor().toArray(new String[0])));
    }
    
    private void loadTenKhoaHocCBB() throws SQLException{
        cbbTenKhoaHoc.setModel(new DefaultComboBoxModel<String>((String[]) s.readTitleCourseInstructor().toArray(new String[0])));
    }
    private DefaultTableModel convertCI(ArrayList list){
        String[] columnNames = {"TT","CourseID","Title","PersonID","FullName"};
        Object[][] data = new Object[list.size()][5];
        for(int i=0;i<list.size();i++){
            CourseInstructorDTO s = (CourseInstructorDTO) list.get(i);
            data[i][0]=i+1;
            data[i][1]=s.getCourseID();
            data[i][2]=s.getTitle();
            data[i][3]=s.getPersonID();
            data[i][4]=s.getFullName();
        }
        DefaultTableModel model = new DefaultTableModel(data,columnNames);
        return model;
    }

    private void findNameInstructor(String name) throws SQLException{
        CourseInstructorDTO ci = new CourseInstructorDTO(0,0,"",name);
        ArrayList list = s.findCourseInstructor(ci);
        DefaultTableModel model = convertCI(list);
        jTable1.setModel(model);
    }
    
    private void findNameCourse(String name) throws SQLException{
        CourseInstructorDTO ci = new CourseInstructorDTO(0,0,name,"");
        ArrayList list = s.findCourseInstructor(ci);
        DefaultTableModel model = convertCI(list);
        jTable1.setModel(model);
    }
    
    private void findIdInstructor(String name) throws SQLException{
        CourseInstructorDTO ci = new CourseInstructorDTO(0,Integer.parseInt(name),"","");
        ArrayList list = s.findCourseInstructor(ci);
        DefaultTableModel model = convertCI(list);
        jTable1.setModel(model);
    }
    
    private void findIdCourse(String name) throws SQLException{
        CourseInstructorDTO ci = new CourseInstructorDTO(Integer.parseInt(name),0,"","");
        ArrayList list = s.findCourseInstructor(ci);
        DefaultTableModel model = convertCI(list);
        jTable1.setModel(model);
    }
    
    private void listCI() throws SQLException{
        ArrayList list = s.readCourseInstructor();
        DefaultTableModel model = convertCI(list);
        jTable1.setModel(model);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Custom.ButtonRadius btnSua;
    private Custom.ButtonRadius btnThem;
    private Custom.ButtonRadius btnXoa;
    private javax.swing.JComboBox<String> cbbTenGiangVien;
    private javax.swing.JComboBox<String> cbbTenKhoaHoc;
    private javax.swing.JComboBox<String> cbb_TimKiem;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private Custom.PanelRadius panelRadius1;
    private Custom.PanelRadius panelRadius3;
    private javax.swing.JTextField txtMaGiangVien;
    private javax.swing.JTextField txtMaKhoaHoc;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
